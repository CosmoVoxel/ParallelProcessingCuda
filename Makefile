# Makefile –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –º–∞—Ç—Ä–∏—á–Ω–æ–≥–æ —É–º–Ω–æ–∂–µ–Ω–∏—è
# –ê–≤—Ç–æ—Ä: –î–ª—è —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–æ–≤ —Å CUDA
# –î–∞—Ç–∞: –ò—é–Ω—å 2025

# –ö–æ–º–ø–∏–ª—è—Ç–æ—Ä –∏ —Ñ–ª–∞–≥–∏
NVCC = nvcc
CFLAGS = -std=c++14
TARGET = matrix.out
SOURCE = matrixMul.cu

# –†–∞–∑–º–µ—Ä—ã –º–∞—Ç—Ä–∏—Ü –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
SIZES = 640 6400

# –†–∞–∑–º–µ—Ä—ã –±–ª–æ–∫–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
BLOCK_SIZES = 16 32

# –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –Ω–∞ –ø–æ—Ç–æ–∫ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
ELEMENTS_PER_THREAD_VALUES = 1 2 4 8

# –¢–µ–∫—É—â–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)
CURRENT_BLOCK_SIZE = 32
CURRENT_ELEMENTS = 4

# –¶–≤–µ—Ç–∞ –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –≤—ã–≤–æ–¥–∞
RED = \033[0;31m
GREEN = \033[0;32m
YELLOW = \033[1;33m
BLUE = \033[0;34m
PURPLE = \033[0;35m
CYAN = \033[0;36m
NC = \033[0m # No Color

.PHONY: all clean test-all test-size help table test-elements test-float4 test-matrix test-blocks test-combinations mega-test

# –û—Å–Ω–æ–≤–Ω–∞—è —Ü–µ–ª—å - –∫–æ–º–ø–∏–ª—è—Ü–∏—è
all: $(TARGET)

$(TARGET): $(SOURCE)
	@echo "$(CYAN)üî® –ö–æ–º–ø–∏–ª–∏—Ä—É–µ–º CUDA kernel...$(NC)"
	$(NVCC) $(CFLAGS) -o $(TARGET) $(SOURCE)
	@echo "$(GREEN)‚úÖ –ö–æ–º–ø–∏–ª—è—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!$(NC)"

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö —Ä–∞–∑–º–µ—Ä–æ–≤
test-all: $(TARGET)
	@echo "$(PURPLE)üöÄ –ù–ê–ß–ò–ù–ê–ï–ú –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ü–†–û–ò–ó–í–û–î–ò–¢–ï–õ–¨–ù–û–°–¢–ò üöÄ$(NC)"
	@echo "$(YELLOW)================================================$(NC)"
	@echo "$(BLUE)| –†–∞–∑–º–µ—Ä  | –í—Ä–µ–º—è (–º—Å) | GFlop/s | –≠–ª–µ–º–µ–Ω—Ç—ã/–ø–æ—Ç–æ–∫ |$(NC)"
	@echo "$(YELLOW)================================================$(NC)"
	@for size in $(SIZES); do \
		echo "$(CYAN)üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–∑–º–µ—Ä: $${size}x$${size}$(NC)"; \
		./$(TARGET) -wA=$$size -hA=$$size -wB=$$size -hB=$$size | \
		grep -E "(–≠–õ–ï–ú–ï–ù–¢–û–í –ù–ê –ü–û–¢–û–ö|Performance)" | \
		awk 'BEGIN{elements=0; perf=""} \
		/–≠–õ–ï–ú–ï–ù–¢–û–í –ù–ê –ü–û–¢–û–ö/ {elements=$$4} \
		/Performance/ {split($$0,a,"="); split(a[2],b,","); perf=b[1]; split(a[3],c,","); time=c[1]} \
		END{printf "$(GREEN)| %6s  | %10s | %7s | %14s |$(NC)\n", "'$$size'", time, perf, elements}'; \
	done
	@echo "$(YELLOW)================================================$(NC)"
	@echo "$(GREEN)‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!$(NC)"

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞
test-size: $(TARGET)
	@if [ -z "$(SIZE)" ]; then \
		echo "$(RED)‚ùå –û—à–∏–±–∫–∞: –£–∫–∞–∂–∏—Ç–µ —Ä–∞–∑–º–µ—Ä —Å SIZE=—á–∏—Å–ª–æ$(NC)"; \
		echo "$(YELLOW)–ü—Ä–∏–º–µ—Ä: make test-size SIZE=800$(NC)"; \
		exit 1; \
	fi
	@echo "$(CYAN)üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–∑–º–µ—Ä: $(SIZE)x$(SIZE)$(NC)"
	./$(TARGET) -wA=$(SIZE) -hA=$(SIZE) -wB=$(SIZE) -hB=$(SIZE)

# –°–æ–∑–¥–∞–Ω–∏–µ –∫—Ä–∞—Å–∏–≤–æ–π —Ç–∞–±–ª–∏—Ü—ã –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
table: $(TARGET)
	@echo "$(PURPLE)üìä –°–û–ó–î–ê–ï–ú –¢–ê–ë–õ–ò–¶–£ –î–õ–Ø –û–¢–ß–ï–¢–ê üìä$(NC)"
	@echo "$(YELLOW)==========================================$(NC)"
	@echo "–†–∞–∑–º–µ—Ä –º–∞—Ç—Ä–∏—Ü—ã | –í—Ä–µ–º—è (–º—Å) | –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å (GFlop/s) | –≠–ª–µ–º–µ–Ω—Ç—ã –Ω–∞ –ø–æ—Ç–æ–∫"
	@echo "---------------|------------|------------------------------|------------------"
	@for size in $(SIZES); do \
		./$(TARGET) -wA=$$size -hA=$$size -wB=$$size -hB=$$size 2>/dev/null | \
		grep -E "(–≠–õ–ï–ú–ï–ù–¢–û–í –ù–ê –ü–û–¢–û–ö|Performance)" | \
		awk 'BEGIN{elements=0; perf=""; time=""} \
		/–≠–õ–ï–ú–ï–ù–¢–û–í –ù–ê –ü–û–¢–û–ö/ {elements=$$4} \
		/Performance/ {split($$0,a,"="); split(a[2],b,","); perf=b[1]; split(a[3],c,","); time=c[1]} \
		END{printf "%13sx%-2s | %10s | %28s | %16s\n", "'$$size'", "'$$size'", time, perf, elements}'; \
	done
	@echo "$(YELLOW)==========================================$(NC)"

# –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç —Å —Ä–∞–∑–Ω—ã–º–∏ ELEMENTS_PER_THREAD
test-elements: $(TARGET)
	@echo "$(PURPLE)üî¨ –¢–ï–°–¢–ò–†–£–ï–ú –†–ê–ó–ù–´–ï –≠–õ–ï–ú–ï–ù–¢–´ –ù–ê –ü–û–¢–û–ö üî¨$(NC)"
	@echo "$(YELLOW)–†–∞–∑–º–µ—Ä –º–∞—Ç—Ä–∏—Ü—ã: 800x800$(NC)"
	@echo "$(BLUE)–≠–ª–µ–º–µ–Ω—Ç—ã/–ø–æ—Ç–æ–∫ | –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å (GFlop/s) | –í—Ä–µ–º—è (–º—Å)$(NC)"
	@echo "$(YELLOW)----------------------------------------------------$(NC)"
	@for elements in 1 2 4 8; do \
		echo "$(CYAN)üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º $$elements —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –Ω–∞ –ø–æ—Ç–æ–∫$(NC)"; \
		./$(TARGET) -wA=800 -hA=800 -wB=800 -hB=800 -elements_per_thread=$$elements 2>/dev/null | \
		grep "Performance" | \
		awk '{split($$0,a,"="); split(a[2],b,","); perf=b[1]; split(a[3],c,","); time=c[1]; printf "$(GREEN)%13s  | %26s | %10s$(NC)\n", "'$$elements'", perf, time}'; \
	done
	@echo "$(YELLOW)----------------------------------------------------$(NC)"

# –¢–µ—Å—Ç —Å –≤–∫–ª—é—á–µ–Ω–Ω–æ–π float4 –≤–µ–∫—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π
test-float4: $(TARGET)
	@echo "$(PURPLE)üåü –¢–ï–°–¢–ò–†–£–ï–ú FLOAT4 –í–ï–ö–¢–û–†–ò–ó–ê–¶–ò–Æ üåü$(NC)"
	@echo "$(YELLOW)–†–∞–∑–º–µ—Ä –º–∞—Ç—Ä–∏—Ü—ã: 800x800, 4 —ç–ª–µ–º–µ–Ω—Ç–∞ –Ω–∞ –ø–æ—Ç–æ–∫$(NC)"
	@sed -i "s/#define USE_FLOAT4.*/#define USE_FLOAT4 1/" $(SOURCE)
	@sed -i "s/#define ELEMENTS_PER_THREAD.*/#define ELEMENTS_PER_THREAD 4/" $(SOURCE)
	@$(NVCC) $(CFLAGS) -o $(TARGET) $(SOURCE)
	@echo "$(CYAN)üöÄ Float4 –≤–µ–∫—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –í–ö–õ–Æ–ß–ï–ù–ê$(NC)"
	@./$(TARGET) -wA=800 -hA=800 -wB=800 -hB=800
	@sed -i "s/#define USE_FLOAT4.*/#define USE_FLOAT4 0/" $(SOURCE)
	@echo "$(GREEN)‚úÖ –¢–µ—Å—Ç float4 –∑–∞–≤–µ—Ä—à–µ–Ω (–≤–µ–∫—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –æ—Ç–∫–ª—é—á–µ–Ω–∞)$(NC)"

# –ú–ï–ì–ê –¢–ï–°–¢: –í—Å–µ –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏ –±–ª–æ–∫–æ–≤ –∏ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞ –º–∞—Ç—Ä–∏—Ü—ã
mega-test: $(TARGET)
	@echo "$(PURPLE)üöÄüöÄüöÄ –ú–ï–ì–ê –¢–ï–°–¢ –í–°–ï–• –ö–û–ú–ë–ò–ù–ê–¶–ò–ô üöÄüöÄüöÄ$(NC)"
	@echo "$(YELLOW)===============================================$(NC)"
	@for size in $(SIZES); do \
		echo "$(CYAN)üéØ –†–ê–ó–ú–ï–† –ú–ê–¢–†–ò–¶–´: $${size}x$${size}$(NC)"; \
		echo "$(BLUE)–ë–ª–æ–∫ | –≠–ª–µ–º–µ–Ω—Ç—ã/–ø–æ—Ç–æ–∫ | –í—Ä–µ–º—è (–º—Å) | GFlop/s$(NC)"; \
		echo "$(YELLOW)-----|----------------|------------|--------$(NC)"; \
		for block in $(BLOCK_SIZES); do \
			for elements in $(ELEMENTS_PER_THREAD_VALUES); do \
				echo "$(CYAN)üîß –¢–µ—Å—Ç–∏—Ä—É–µ–º: –±–ª–æ–∫=$$block, —ç–ª–µ–º–µ–Ω—Ç—ã=$$elements$(NC)"; \
				perf_data=$$(./$(TARGET) -wA=$$size -hA=$$size -wB=$$size -hB=$$size -blocksize=$$block -elements_per_thread=$$elements 2>/dev/null | grep "Performance"); \
				if [ ! -z "$$perf_data" ]; then \
					echo "$$perf_data" | awk '{split($$0,a,"="); split(a[2],b,","); perf=b[1]; split(a[3],c,","); time=c[1]; printf "$(GREEN)%4s | %14s | %10s | %7s$(NC)\n", "'$$block'", "'$$elements'", time, perf}'; \
				fi; \
			done; \
		done; \
		echo "$(YELLOW)-----|----------------|------------|--------$(NC)"; \
		echo ""; \
	done
	@echo "$(GREEN)‚úÖ –ú–ï–ì–ê –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù!$(NC)"

# –¢–µ—Å—Ç –≤—Å–µ—Ö –∫–æ–º–±–∏–Ω–∞—Ü–∏–π –¥–ª—è –æ–¥–Ω–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞ –º–∞—Ç—Ä–∏—Ü—ã (800x800)
test-combinations: $(TARGET)
	@echo "$(PURPLE)üß™ –¢–ï–°–¢–ò–†–£–ï–ú –í–°–ï –ö–û–ú–ë–ò–ù–ê–¶–ò–ò –¥–ª—è 800x800 üß™$(NC)"
	@echo "$(YELLOW)================================================$(NC)"
	@echo "$(BLUE)–†–∞–∑–º–µ—Ä –±–ª–æ–∫–∞ | –≠–ª–µ–º–µ–Ω—Ç—ã/–ø–æ—Ç–æ–∫ | –í—Ä–µ–º—è (–º—Å) | –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å (GFlop/s)$(NC)"
	@echo "$(YELLOW)-------------|----------------|------------|-----------------------------$(NC)"
	@for block in $(BLOCK_SIZES); do \
		for elements in $(ELEMENTS_PER_THREAD_VALUES); do \
			echo "$(CYAN)üîß –¢–µ—Å—Ç–∏—Ä—É–µ–º: –±–ª–æ–∫=$$block, —ç–ª–µ–º–µ–Ω—Ç—ã=$$elements$(NC)"; \
			./$(TARGET) -wA=800 -hA=800 -wB=800 -hB=800 -blocksize=$$block -elements_per_thread=$$elements 2>/dev/null | \
			grep "Performance" | \
			awk '{split($$0,a,"="); split(a[2],b,","); perf=b[1]; split(a[3],c,","); time=c[1]; printf "$(GREEN)%12s | %14s | %10s | %27s$(NC)\n", "'$$block'", "'$$elements'", time, perf}'; \
		done; \
	done
	@echo "$(YELLOW)-------------|----------------|------------|-----------------------------$(NC)"
	@echo "$(GREEN)‚úÖ –¢–µ—Å—Ç –∫–æ–º–±–∏–Ω–∞—Ü–∏–π –∑–∞–≤–µ—Ä—à–µ–Ω!$(NC)"

# –û—Ç–¥–µ–ª—å–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ –¥–ª—è —Ä–∞–∑–º–µ—Ä–æ–≤ –±–ª–æ–∫–æ–≤
test-blocks: $(TARGET)
	@echo "$(PURPLE)üîß –ê–ù–ê–õ–ò–ó –í–õ–ò–Ø–ù–ò–Ø –†–ê–ó–ú–ï–†–ê –ë–õ–û–ö–ê üîß$(NC)"
	@echo "$(YELLOW)–§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã: —ç–ª–µ–º–µ–Ω—Ç—ã=4, —Ä–∞–∑–º–µ—Ä=800x800$(NC)"
	@echo "$(BLUE)–†–∞–∑–º–µ—Ä –±–ª–æ–∫–∞ | –í—Ä–µ–º—è (–º—Å) | –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å (GFlop/s)$(NC)"
	@echo "$(YELLOW)-------------|------------|-----------------------------$(NC)"
	@for block in $(BLOCK_SIZES); do \
		echo "$(CYAN)üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –±–ª–æ–∫ —Ä–∞–∑–º–µ—Ä–æ–º: $$block$(NC)"; \
		./$(TARGET) -wA=800 -hA=800 -wB=800 -hB=800 -blocksize=$$block -elements_per_thread=4 2>/dev/null | \
		grep "Performance" | \
		awk '{split($$0,a,"="); split(a[2],b,","); perf=b[1]; split(a[3],c,","); time=c[1]; printf "$(GREEN)%12s | %10s | %27s$(NC)\n", "'$$block'", time, perf}'; \
	done
	@echo "$(YELLOW)-------------|------------|-----------------------------$(NC)"

# –°–æ–∑–¥–∞–Ω–∏–µ CSV —Ñ–∞–π–ª–∞ –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ –≤ Excel/Google Sheets
csv-export: $(TARGET)
	@echo "$(PURPLE)üìä –≠–ö–°–ü–û–†–¢ –í CSV –§–û–†–ú–ê–¢ üìä$(NC)"
	@echo "Matrix_Size,Block_Size,Elements_Per_Thread,Time_ms,Performance_GFlops" > performance_results.csv
	@for size in $(SIZES); do \
		for block in $(BLOCK_SIZES); do \
			for elements in $(ELEMENTS_PER_THREAD_VALUES); do \
				perf_data=$$(./$(TARGET) -wA=$$size -hA=$$size -wB=$$size -hB=$$size -blocksize=$$block -elements_per_thread=$$elements 2>/dev/null | grep "Performance"); \
				if [ ! -z "$$perf_data" ]; then \
					echo "$$perf_data" | awk '{split($$0,a,"="); split(a[2],b,","); perf=b[1]; split(a[3],c,","); time=c[1]; printf "'$$size','$$block','$$elements',%s,%s\n", time, perf}' >> performance_results.csv; \
				fi; \
			done; \
		done; \
	done
	@echo "$(GREEN)‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ performance_results.csv$(NC)"

# –ü–æ–∏—Å–∫ –ª—É—á—à–µ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
find-best: $(TARGET)
	@echo "$(PURPLE)üèÜ –ü–û–ò–°–ö –õ–£–ß–®–ï–ô –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò üèÜ$(NC)"
	@echo "$(YELLOW)–¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–∑–º–µ—Ä 800x800...$(NC)"
	@best_perf=0; best_config=""; \
	for block in $(BLOCK_SIZES); do \
		for elements in $(ELEMENTS_PER_THREAD_VALUES); do \
			perf=$$(./$(TARGET) -wA=800 -hA=800 -wB=800 -hB=800 -blocksize=$$block -elements_per_thread=$$elements 2>/dev/null | grep "Performance" | awk '{split($$0,a,"="); split(a[2],b,","); print b[1]}' | tr -d ' '); \
			if [ ! -z "$$perf" ]; then \
				if (( $$(echo "$$perf > $$best_perf" | bc -l) )); then \
					best_perf=$$perf; \
					best_config="–±–ª–æ–∫=$$block, —ç–ª–µ–º–µ–Ω—Ç—ã=$$elements"; \
				fi; \
				echo "$(CYAN)–ë–ª–æ–∫ $$block, —ç–ª–µ–º–µ–Ω—Ç—ã $$elements: $$perf GFlop/s$(NC)"; \
			fi; \
		done; \
	done; \
	echo "$(GREEN)üèÜ –õ–£–ß–®–ê–Ø –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø: $$best_config —Å $$best_perf GFlop/s$(NC)"

# –û—á–∏—Å—Ç–∫–∞
clean:
	@echo "$(YELLOW)üßπ –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã...$(NC)"
	rm -f $(TARGET)
	@echo "$(GREEN)‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!$(NC)"

# –ü–æ–º–æ—â—å
help:
	@echo "$(PURPLE)üìñ –ü–û–ú–û–©–¨ –ü–û MAKEFILE üìñ$(NC)"
	@echo "$(YELLOW)==============================$(NC)"
	@echo "$(GREEN)üî® –ö–û–ú–ü–ò–õ–Ø–¶–ò–Ø:$(NC)"
	@echo "$(CYAN)make all$(NC)               - –ö–æ–º–ø–∏–ª–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É"
	@echo ""
	@echo "$(GREEN)üß™ –û–°–ù–û–í–ù–´–ï –¢–ï–°–¢–´:$(NC)"
	@echo "$(CYAN)make test-all$(NC)          - –¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –≤—Å–µ —Ä–∞–∑–º–µ—Ä—ã –º–∞—Ç—Ä–∏—Ü"
	@echo "$(CYAN)make test-size SIZE=N$(NC)   - –¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —Ä–∞–∑–º–µ—Ä"
	@echo "$(CYAN)make table$(NC)             - –°–æ–∑–¥–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É –¥–ª—è –æ—Ç—á–µ—Ç–∞"
	@echo ""
	@echo "$(GREEN)üî¨ –°–ü–ï–¶–ò–ê–õ–¨–ù–´–ï –¢–ï–°–¢–´:$(NC)"
	@echo "$(CYAN)make test-elements$(NC)     - –¢–µ—Å—Ç —Ä–∞–∑–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –Ω–∞ –ø–æ—Ç–æ–∫"
	@echo "$(CYAN)make test-blocks$(NC)       - –ê–Ω–∞–ª–∏–∑ –≤–ª–∏—è–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ –±–ª–æ–∫–∞"
	@echo "$(CYAN)make test-combinations$(NC) - –í—Å–µ –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏ –¥–ª—è 800x800"
	@echo "$(CYAN)make test-float4$(NC)       - –¢–µ—Å—Ç float4 –≤–µ–∫—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏"
	@echo ""
	@echo "$(GREEN)üöÄ –ú–ï–ì–ê –¢–ï–°–¢–´:$(NC)"
	@echo "$(CYAN)make mega-test$(NC)         - –í–°–ï –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏ –¥–ª—è –í–°–ï–• —Ä–∞–∑–º–µ—Ä–æ–≤"
	@echo "$(CYAN)make find-best$(NC)         - –ù–∞–π—Ç–∏ –ª—É—á—à—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é"
	@echo "$(CYAN)make csv-export$(NC)        - –≠–∫—Å–ø–æ—Ä—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≤ CSV"
	@echo ""
	@echo "$(GREEN)üßπ –£–¢–ò–õ–ò–¢–´:$(NC)"
	@echo "$(CYAN)make clean$(NC)             - –û—á–∏—Å—Ç–∏—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã"
	@echo "$(CYAN)make help$(NC)              - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
	@echo "$(YELLOW)==============================$(NC)"
	@echo "$(GREEN)üí° –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:$(NC)"
	@echo "  make test-size SIZE=1600"
	@echo "  make table > results.txt"
	@echo "  make csv-export"
	@echo "  make find-best"
	@echo "$(YELLOW)==============================$(NC)"
	@echo "$(PURPLE)üéØ –†–∞–∑–º–µ—Ä—ã –º–∞—Ç—Ä–∏—Ü: $(SIZES)$(NC)"
	@echo "$(PURPLE)üîß –†–∞–∑–º–µ—Ä—ã –±–ª–æ–∫–æ–≤: $(BLOCK_SIZES)$(NC)"
	@echo "$(PURPLE)‚ö° –≠–ª–µ–º–µ–Ω—Ç—ã/–ø–æ—Ç–æ–∫: $(ELEMENTS_PER_THREAD_VALUES)$(NC)"
